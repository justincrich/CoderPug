/*--------------Dependencies----------------*/
@import 'sizes';
/*--------------Functions-------------------*/
@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

  @return 0 $primary-offset $blur $color;
}

@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

  @return 0 $primary-offset $blur $color;
}

/*--------------Mixins-------------------*/

//Card - to add shadows to new card divs
@mixin card($depth:2) {
  @if $depth < 1 {
    box-shadow: none;
  } @else if $depth > 5 {
    @warn "Invalid $depth `#{$depth}` for mixin `card`.";
  } @else {
    box-shadow: bottom-shadow($depth), top-shadow($depth);
  }
}

//Picture - formats pictures as round
@mixin picture(
  $size,
  $brSize:0
  ){
    height: $size;
    width: $size;
    overflow:hidden;
    border-radius: 100%;
    border: $brSize solid #F0F0F0;
    img{
      width:100%;
      height: 100%;

    }
}

//MQ - Media query mixin that returns the media query for the caller
@mixin mq($break){
  $value:map-get($breakpoints,$break);
  @if $value == null{
    @error 'Input is not valid';
  }
  @if $break == 'tablet'{
    @media (min-width: $value){
      @content;
    }
  }
}
